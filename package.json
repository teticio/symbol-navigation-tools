{
  "name": "symbol-navigation-tools",
  "displayName": "Symbol Navigation Tools",
  "description": "Tool to enable LLMs to navigate your codebase and modules/packages more effectively.",
  "publisher": "teticio",
  "license": "BSD-3-Clause",
  "repository": {
    "type": "git",
    "url": "https://github.com/teticio/symbol-navigation-tools.git"
  },
  "version": "0.0.2",
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "icon.png",
  "keywords": [
    "copilot",
    "tool",
    "symbol",
    "definition",
    "docstring",
    "module",
    "package"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languageModelTools": [
      {
        "name": "go-to-definition",
        "tags": [
          "symbol",
          "module",
          "package"
        ],
        "toolReferenceName": "goToDefinition",
        "displayName": "Go To Definition",
        "modelDescription": "Use go-to-definition whenever you need to find where a symbol (such as a function, class, method, or variable) is defined in the codebase or in installed modules/packages. This tool is far more precise and reliable than text or semantic search for understanding code relationships, following references, and exploring unfamiliar code. It is especially valuable for inspecting the actual implementation of dependencies, verifying configuration options, and learning about features directly from the code that is running in the user's environment. Prefer go-to-definition over generic search when you have a specific symbol of interest.",
        "userDescription": "Find where a symbol is defined in your codebase or dependencies.",
        "canBeReferencedInPrompt": true,
        "icon": "$(files)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "symbol": {
              "type": "string",
              "description": "The symbol to find the definition for."
            },
            "uri": {
              "type": "string",
              "description": "The VSCode URI of the document where the symbol is defined (e.g., absolute path to file)."
            },
            "startLineNumber": {
              "type": "number",
              "description": "The starting line number of the context (1-based).",
              "optional": true
            },
            "endLineNumber": {
              "type": "number",
              "description": "The ending line number of the context (1-based).",
              "optional": true
            }
          }
        }
      },
      {
        "name": "get-document-symbols",
        "tags": [
          "symbol",
          "module",
          "package",
          "docstring"
        ],
        "toolReferenceName": "getDocumentSymbols",
        "displayName": "Get Document Symbols",
        "modelDescription": "Use get-document-symbols to quickly obtain a structured, hierarchical overview of all symbols (classes, functions, methods, variables, etc.) defined in a file, including their nesting and line number ranges. This tool also retrieves hover information such as docstrings, comments, and type signatures, making it ideal for understanding the organization, purpose, and documentation of code at a glance. Prefer get-document-symbols over reading raw file contents or searching for symbol names, especially for large files or when you need to understand code structure and available APIs.",
        "userDescription": "List all symbols and their structure in a file, with doc info.",
        "canBeReferencedInPrompt": true,
        "icon": "$(files)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "uri": {
              "type": "string",
              "description": "The VSCode URI of the document for which to retrieve symbols (e.g., absolute path to file)."
            },
            "maxDepth": {
              "type": "number",
              "description": "The maximum depth of symbol nesting to retrieve.",
              "optional": true
            }
          }
        }
      }
    ],
    "commands": []
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.102.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "eslint": "^9.32.0",
    "typescript": "^5.9.2",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2"
  }
}